name: CI/CD to OVHcloud

on:
  push:
    branches:
      - master

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Check out the repository
    - name: Checkout Code
      uses: actions/checkout@v3

    # Step 2: Debug filesystem
    - name: Debug Filesystem
      run: ls -R

    # Step 3: Set up Docker
    - name: Set up Docker
      uses: docker/setup-buildx-action@v2

    # Step 4: Log in to DockerHub
    - name: Log in to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Step 5: Build and push backend Docker image
    - name: Build and Push Backend Image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/backend ./backend
        docker push ${{ secrets.DOCKER_USERNAME }}/backend

    # Step 6: Build and push frontend Docker image
    - name: Build and Push Frontend Image
      run: |
        docker build --progress=plain -t ${{ secrets.DOCKER_USERNAME }}/frontend ./frontend
        docker push ${{ secrets.DOCKER_USERNAME }}/frontend

    # Step 7: Debug SSH Connection
    - name: Debug SSH Connection
      run: |
        echo "${{ secrets.OVH_SSH_KEY }}" > ssh_key
        chmod 600 ssh_key
        ssh -i ssh_key -o StrictHostKeyChecking=no ${{ secrets.OVH_USER }}@${{ secrets.OVH_IP }} "echo SSH connection successful"

    # Step 8: Deploy to OVHcloud
    - name: Deploy to OVHcloud
      run: |
        echo "${{ secrets.OVH_SSH_KEY }}" > ssh_key
        chmod 600 ssh_key
        ssh -i ssh_key -o StrictHostKeyChecking=no ${{ secrets.OVH_USER }}@${{ secrets.OVH_IP }} << 'EOF'
          cd /var/www/two-tier-app
          docker-compose pull
          docker-compose up -d
        EOF
